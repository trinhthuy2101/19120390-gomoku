{"ast":null,"code":"var _jsxFileName = \"/Users/lap01866/Downloads/19120390_10/src/component/Board.js\";\nimport Square from './Square';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Board(_ref) {\n  let {\n    sizeOfBoard,\n    squares,\n    onClick\n  } = _ref;\n\n  let drawBoard = size => {\n    let board = [];\n\n    for (let index = 0; index < size; ++index) {\n      board.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: drawRow(index * size, size)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this));\n    }\n\n    return board;\n  };\n\n  let drawRow = (rowIndex, size) => {\n    let row = [];\n\n    for (let index = 0; index < size; ++index) {\n      row.push(drawSquare(index + rowIndex));\n    }\n\n    return row;\n  };\n\n  let drawSquare = index => {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: squares[index],\n      onClick: () => onClick(index)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: drawBoard(sizeOfBoard)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["Square","Board","sizeOfBoard","squares","onClick","drawBoard","size","board","index","push","drawRow","rowIndex","row","drawSquare"],"sources":["/Users/lap01866/Downloads/19120390_10/src/component/Board.js"],"sourcesContent":["import Square from './Square';\r\n\r\n function Board({ sizeOfBoard, squares, onClick }) {\r\n    let drawBoard = (size) => {\r\n        let board = [];\r\n        for (let index = 0; index < size; ++index) {\r\n            board.push(\r\n                <div className=\"board-row\">\r\n                    {drawRow(index * size, size)}\r\n                </div>\r\n            );\r\n        }\r\n        return board;\r\n    }\r\n\r\n    let drawRow = (rowIndex, size) => {\r\n        let row = [];\r\n        for (let index = 0; index < size; ++index) {\r\n            row.push(drawSquare(index + rowIndex));\r\n        }\r\n        return row;\r\n    }\r\n\r\n    let drawSquare = (index) => {\r\n        return (\r\n            <Square\r\n                value={squares[index]}\r\n                onClick={() => onClick(index)}\r\n            />\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <div>{drawBoard(sizeOfBoard)}</div>\r\n    );\r\n\r\n}\r\n\r\nexport default Board;"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,UAAnB;;;AAEC,SAASC,KAAT,OAAkD;EAAA,IAAnC;IAAEC,WAAF;IAAeC,OAAf;IAAwBC;EAAxB,CAAmC;;EAC/C,IAAIC,SAAS,GAAIC,IAAD,IAAU;IACtB,IAAIC,KAAK,GAAG,EAAZ;;IACA,KAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGF,IAA5B,EAAkC,EAAEE,KAApC,EAA2C;MACvCD,KAAK,CAACE,IAAN,eACI;QAAK,SAAS,EAAC,WAAf;QAAA,UACKC,OAAO,CAACF,KAAK,GAAGF,IAAT,EAAeA,IAAf;MADZ;QAAA;QAAA;QAAA;MAAA,QADJ;IAKH;;IACD,OAAOC,KAAP;EACH,CAVD;;EAYA,IAAIG,OAAO,GAAG,CAACC,QAAD,EAAWL,IAAX,KAAoB;IAC9B,IAAIM,GAAG,GAAG,EAAV;;IACA,KAAK,IAAIJ,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGF,IAA5B,EAAkC,EAAEE,KAApC,EAA2C;MACvCI,GAAG,CAACH,IAAJ,CAASI,UAAU,CAACL,KAAK,GAAGG,QAAT,CAAnB;IACH;;IACD,OAAOC,GAAP;EACH,CAND;;EAQA,IAAIC,UAAU,GAAIL,KAAD,IAAW;IACxB,oBACI,QAAC,MAAD;MACI,KAAK,EAAEL,OAAO,CAACK,KAAD,CADlB;MAEI,OAAO,EAAE,MAAMJ,OAAO,CAACI,KAAD;IAF1B;MAAA;MAAA;MAAA;IAAA,QADJ;EAMH,CAPD;;EAUA,oBACI;IAAA,UAAMH,SAAS,CAACH,WAAD;EAAf;IAAA;IAAA;IAAA;EAAA,QADJ;AAIH;;KAnCSD,K;AAqCV,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}