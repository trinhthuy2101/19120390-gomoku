{"ast":null,"code":"var _jsxFileName = \"/Users/lap01866/Downloads/19120390_10/src/component/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Board from './Board';\nimport Square from './Square';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Game() {\n  _s();\n\n  const sizeOfBoard = 5;\n  const [size, setSize] = useState(5);\n  const [history, setHistory] = useState([{\n    squares: Array(sizeOfBoard * sizeOfBoard).fill(null),\n    tracking: []\n  }]);\n  const [stepNumber, setStepNumber] = useState(0);\n  const [xIsNext, setXIsNext] = useState(true);\n  const [order, setOrder] = useState(false);\n\n  let handleClick = i => {\n    const sizeOfBoard = size;\n    const historyTemp = history.slice(0, stepNumber + 1);\n    const current = historyTemp[historyTemp.length - 1];\n    const squares = current.squares.slice();\n    const tracking = current.tracking.slice();\n    let whoWin = finWinner(squares, sizeOfBoard);\n\n    if (whoWin && whoWin !== 'D' || squares[i]) {\n      return;\n    }\n\n    squares[i] = xIsNext ? \"X\" : \"O\";\n    tracking.push(i);\n    setSize(sizeOfBoard);\n    setHistory(historyTemp.concat([{\n      squares: squares,\n      tracking: tracking\n    }]));\n    setStepNumber(historyTemp.length);\n    setXIsNext(!xIsNext);\n    setOrder(order);\n  };\n\n  let jumpTo = step => {\n    setStepNumber(step);\n  };\n\n  let finWinner = (squares, sizeOfBoard) => {\n    if (squares === null) return null;\n\n    for (let i = 0; i < sizeOfBoard; i++) {\n      if (squares[i * sizeOfBoard]) {\n        let flag = true;\n\n        for (let j = 0; j < sizeOfBoard - 1; j++) if (squares[i * sizeOfBoard + j] !== squares[i * sizeOfBoard + j + 1]) {\n          flag = false;\n          break;\n        }\n\n        if (flag) return squares[i * sizeOfBoard];\n      }\n\n      if (squares[i]) {\n        let flag = true;\n\n        for (let j = 0; j < sizeOfBoard - 1; j++) if (squares[j * sizeOfBoard + i] !== squares[(j + 1) * sizeOfBoard + i]) {\n          flag = false;\n          break;\n        }\n\n        if (flag) return squares[i];\n      }\n    }\n\n    if (squares[0]) {\n      let flag = true;\n\n      for (let j = 1; j < sizeOfBoard; j++) if (squares[j * sizeOfBoard + j] !== squares[0]) {\n        flag = false;\n        break;\n      }\n\n      if (flag) {\n        return squares[0];\n      }\n    }\n\n    if (squares[sizeOfBoard - 1]) {\n      let flag = true;\n\n      for (let j = 0; j < sizeOfBoard - 1; j++) if (squares[j * sizeOfBoard + sizeOfBoard - j - 1] !== squares[(j + 1) * sizeOfBoard + sizeOfBoard - j - 2]) {\n        flag = false;\n        break;\n      }\n\n      if (flag) {\n        return squares[sizeOfBoard - 1];\n      }\n    }\n\n    let draw = true;\n\n    for (let i = 0; i < squares.length; ++i) if (!squares[i]) {\n      draw = false;\n      break;\n    }\n\n    if (draw) return 'D';\n    return null;\n  };\n\n  const current = history[stepNumber];\n  let moves = history.map((step, move) => {\n    const desc = move ? 'Go to move #' + move + '.    Pos = [' + Math.floor(step.tracking[step.tracking.length - 1] / size) + ', ' + step.tracking[step.tracking.length - 1] % size + ']' : 'Go to game start';\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        style: move === stepNumber ? {\n          fontWeight: 'bold'\n        } : null,\n        onClick: () => jumpTo(move),\n        children: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this);\n  });\n  let result;\n  let winner = finWinner(current.squares, size);\n  if (!winner) result = \"Next player: \" + (xIsNext ? \"X\" : \"O\");else {\n    if (winner === 'D') {\n      result = \"Draw\";\n    } else {\n      result = winner + ' win';\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        sizeOfBoard: size,\n        squares: current.squares,\n        onClick: i => handleClick(i)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          margin: 10,\n          padding: 10\n        },\n        onClick: () => {\n          setOrder(!order);\n        },\n        children: \" Order \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: order ? moves.reverse() : moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Game, \"sxq4fkMBvOknw1P+TvuHcgGXpfs=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","Board","Square","Game","sizeOfBoard","size","setSize","history","setHistory","squares","Array","fill","tracking","stepNumber","setStepNumber","xIsNext","setXIsNext","order","setOrder","handleClick","i","historyTemp","slice","current","length","whoWin","finWinner","push","concat","jumpTo","step","flag","j","draw","moves","map","move","desc","Math","floor","fontWeight","result","winner","margin","padding","reverse"],"sources":["/Users/lap01866/Downloads/19120390_10/src/component/Game.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Board from './Board';\r\nimport Square from './Square';\r\n\r\nfunction Game() {\r\n    const sizeOfBoard = 5;\r\n    const [size, setSize] = useState(5);\r\n    const [history, setHistory] = useState([{\r\n        squares: Array(sizeOfBoard * sizeOfBoard).fill(null),\r\n        tracking: [],\r\n    }\r\n    ],);\r\n    const [stepNumber, setStepNumber] = useState(0);\r\n    const [xIsNext, setXIsNext] = useState(true);\r\n    const [order, setOrder] = useState(false);\r\n\r\n    let handleClick = (i) => {\r\n        const sizeOfBoard = size;\r\n        const historyTemp = history.slice(0, stepNumber + 1);\r\n        const current = historyTemp[historyTemp.length - 1];\r\n        const squares = current.squares.slice();\r\n        const tracking = current.tracking.slice();\r\n\r\n\r\n        let whoWin = finWinner(squares, sizeOfBoard);\r\n        if (whoWin && whoWin !== 'D' || squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = xIsNext ? \"X\" : \"O\";\r\n        tracking.push(i);\r\n\r\n        setSize(sizeOfBoard);\r\n        setHistory(historyTemp.concat([\r\n            {\r\n                squares: squares,\r\n                tracking: tracking\r\n            }\r\n        ]));\r\n        setStepNumber(historyTemp.length);\r\n        setXIsNext(!xIsNext);\r\n        setOrder(order);\r\n    }\r\n\r\n    let jumpTo = (step) => {\r\n        setStepNumber(step);\r\n\r\n    }\r\n\r\n\r\n    let finWinner = (squares, sizeOfBoard) => {\r\n        if (squares === null) return null;\r\n        for (let i = 0; i < sizeOfBoard; i++) {\r\n            if (squares[i * sizeOfBoard]) {\r\n                let flag = true;\r\n                for (let j = 0; j < sizeOfBoard - 1; j++)\r\n                    if (squares[i * sizeOfBoard + j] !== squares[i * sizeOfBoard + j + 1]) {\r\n                        flag = false; break;\r\n                    }\r\n                if (flag)\r\n                    return squares[i * sizeOfBoard];\r\n            }\r\n    \r\n            if (squares[i]) {\r\n                let flag = true;\r\n                for (let j = 0; j < sizeOfBoard - 1; j++)\r\n                    if (squares[j * sizeOfBoard + i] !== squares[(j + 1) * sizeOfBoard + i]) {\r\n                        flag = false; break;\r\n                    }\r\n                if (flag)\r\n                    return squares[i];\r\n            }\r\n    \r\n        }\r\n        if (squares[0]) {\r\n            let flag = true;\r\n            for (let j = 1; j < sizeOfBoard; j++)\r\n                if (squares[j * sizeOfBoard + j] !== squares[0]) {\r\n                    flag = false;\r\n                    break;\r\n                }\r\n    \r\n            if (flag) {\r\n                return squares[0];\r\n            }\r\n        }\r\n    \r\n    \r\n        if (squares[sizeOfBoard - 1]) {\r\n            let flag = true;\r\n            for (let j = 0; j < sizeOfBoard - 1; j++)\r\n                if (squares[j * sizeOfBoard + sizeOfBoard - j - 1] !== squares[(j + 1) * sizeOfBoard + sizeOfBoard - j - 2]) {\r\n                    flag = false; break;\r\n                }\r\n            if (flag) {\r\n                return squares[sizeOfBoard - 1];\r\n            }\r\n        }\r\n    \r\n        let draw = true;\r\n        for (let i = 0; i < squares.length; ++i)\r\n            if (!squares[i]) {\r\n                draw = false;\r\n                break;\r\n            }\r\n        if (draw) return 'D';\r\n    \r\n    \r\n        return null;\r\n    }\r\n    const current = history[stepNumber];\r\n\r\n\r\n    let moves = history.map((step, move) => {\r\n        const desc = move ?\r\n            'Go to move #' + move + '.    Pos = [' + Math.floor(step.tracking[step.tracking.length - 1] / size) + ', ' + step.tracking[step.tracking.length - 1] % size + ']' :\r\n            'Go to game start';\r\n        return (\r\n            <li key={move}>\r\n                <button style={(move === stepNumber ? { fontWeight: 'bold' } : null)} onClick={() => jumpTo(move)}>{desc}</button>\r\n            </li>\r\n        );\r\n    });\r\n\r\n\r\n    let result;\r\n    let winner = finWinner(current.squares, size);\r\n\r\n    if (!winner)\r\n        result = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\r\n    else {\r\n        if (winner === 'D') {\r\n            result = \"Draw\";\r\n        } else {\r\n            result = winner + ' win';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"game\">\r\n            <div className=\"game-board\">\r\n                <Board\r\n                    sizeOfBoard={size}\r\n                    squares={current.squares}\r\n                    onClick={(i) => handleClick(i)}\r\n                />\r\n            </div>\r\n            <div className=\"game-info\">\r\n                <div>{result}</div>\r\n                 <button  style={{ margin: 10, padding: 10}} onClick={() => {setOrder(!order)}}> Order </button>\r\n                <ol>{order ? moves.reverse() : moves}</ol>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default Game;"],"mappings":"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"},"metadata":{},"sourceType":"module"}